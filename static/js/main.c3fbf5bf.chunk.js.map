{"version":3,"sources":["components/io.js","App.js","reportWebVitals.js","index.js"],"names":["Io","useState","text","setText","finalStr","setFinalStr","punctuation","className","cols","rows","onChange","event","msg","decrypted","i","length","punc","decrypt","target","value","type","String","fromCharCode","parseInt","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAiDeA,EA/CJ,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACRC,EADQ,KACFC,EADE,OAEiBF,mBAAS,IAF1B,mBAERG,EAFQ,KAEEC,EAFF,KAGTC,EAAc,CAAC,IAAK,IAAK,KAwB7B,OACI,qCACI,qBAAKC,UAAU,QAAf,SACI,0BAAUC,KAAK,KAAKC,KAAK,IAAIC,SAXzC,SAAsBC,GAClBR,EAfJ,SAAiBS,GAEb,IADA,IAAIC,EAAY,GACRC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAAK,qBAEhBR,GAFgB,IAEhC,IAAI,EAAJ,qBAA6B,CAAC,IAAtBU,EAAqB,QACtBJ,EAAIE,KAAOE,IACM,MAAbJ,EAAIE,EAAE,GAAYD,GAAa,IAC7BA,GAAa,MALM,+BASpC,OAAOA,EAICI,CAAQN,EAAMO,OAAOC,SAUgCC,KAAK,WAE9D,sBAAKb,UAAU,SAAf,UACI,yCAEaL,EACT,uBAHJ,SAIWmB,OAAOC,aAAaC,SAASrB,EAAK,IACzC,uBALJ,WAMaE,KAEb,wBAAQoB,QAlBpB,WACInB,EAAYD,GAAYiB,OAAOC,aAAaC,SAASrB,EAAK,MAiBlD,+BChCDuB,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c3fbf5bf.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst Io = () => {\r\n    let [text, setText] = useState(\"\");\r\n    let [finalStr, setFinalStr] = useState(\"\");\r\n    let punctuation = [\".\", \"!\", \"?\"];\r\n\r\n    function decrypt(msg) {\r\n        let decrypted = \"\";\r\n        for(let i = 0; i < msg.length; i++) {\r\n            // Check if char is punctuation\r\n            for(let punc of punctuation) {\r\n                if(msg[i] === punc) {\r\n                    if(msg[i-1] === \" \") decrypted += \"1\";\r\n                    else decrypted += \"0\";\r\n                }\r\n            }\r\n        }\r\n        return decrypted;\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setText(decrypt(event.target.value));\r\n    }\r\n\r\n    function handleFinalStr() {\r\n        setFinalStr(finalStr += String.fromCharCode(parseInt(text,2)));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"input\">\r\n                <textarea cols=\"30\" rows=\"8\" onChange={handleChange} type=\"text\"></textarea>\r\n            </div>\r\n            <div className=\"output\">\r\n                <p>\r\n                    {/* Punctuation decryption */}\r\n                    Binary: {text}\r\n                    <br/>\r\n                    Text: {String.fromCharCode(parseInt(text,2))}\r\n                    <br/>\r\n                    Result: {finalStr}\r\n                </p>\r\n                <button onClick={handleFinalStr}>Add result</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Io;","import './App.css';\nimport Io from \"./components/io\";\n\nfunction App() {\n  return (\n    <>\n      <Io></Io>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}